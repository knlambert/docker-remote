// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/std/runtime/runtime.go

// Package mock_runtime is a generated GoMock package.
package mock_runtime

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRuntime is a mock of Runtime interface
type MockRuntime struct {
	ctrl     *gomock.Controller
	recorder *MockRuntimeMockRecorder
}

// MockRuntimeMockRecorder is the mock recorder for MockRuntime
type MockRuntimeMockRecorder struct {
	mock *MockRuntime
}

// NewMockRuntime creates a new mock instance
func NewMockRuntime(ctrl *gomock.Controller) *MockRuntime {
	mock := &MockRuntime{ctrl: ctrl}
	mock.recorder = &MockRuntimeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRuntime) EXPECT() *MockRuntimeMockRecorder {
	return m.recorder
}

// CurrentOS mocks base method
func (m *MockRuntime) CurrentOS() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentOS")
	ret0, _ := ret[0].(string)
	return ret0
}

// CurrentOS indicates an expected call of CurrentOS
func (mr *MockRuntimeMockRecorder) CurrentOS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentOS", reflect.TypeOf((*MockRuntime)(nil).CurrentOS))
}
